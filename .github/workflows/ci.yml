name: WS Tool Name
on:
  push:
    branches:
      - '**'
      - '!ws-iac-scan-results/**'
      - '!whitesource-remediate/master-all**'
      - '!whitesource/migrate-configuration**'
    tags:
      - '*'
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 1.8 ]
    steps:
      - name: Prepare
        uses: actions/checkout@v4
        
      - name: Set Up Java Development Kit
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          server-id: github
          
      - name: Default Maven settings
        uses: s4u/maven-settings-action@v2.8.0
        with:
          java-version: ${{ matrix.java-version }}
          server-id: github
      
      - name: Maven build clean, test and install
        run: |
          mvn clean install -DskipTests
          ls ~/.m2/repository/com/ws/slack-integration/1.0.1-RELEASE/
          
      - name: Checkout code
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/checkout@v4
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths slack-integration-1.0.1-RELEASE.zip slack/src/main/resources/application.properties LICENSE README.md /home/runner/.m2/repository/com/ws/slack-integration/1.0.1-RELEASE/slack-integration-1.0.1-RELEASE.jar
          ls -lS
      
      - name: Create Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false     
          
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          #asset_path: /home/runner/.m2/repository/com/ws/slack-integration/1.0.1-RELEASE/slack-integration-1.0.1-RELEASE.jar
          asset_path: ./slack-integration-1.0.1-RELEASE.zip
          asset_name: slack-integration-1.0.1-RELEASE.zip
          asset_content_type: application/zip


          
        
